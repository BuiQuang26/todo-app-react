{"version":3,"sources":["components/body-app/Control.js","components/body-app/Table.js","components/body-app/form.js","components/body-app/formUpdate.js","components/body-app/AppBody.js","App.js","index.js"],"names":["Control","props","onSearch","keyWord","state","onClearSearch","setState","clickBtnSort","isClickSort","sortValue","ShowForm","bind","handleChange","event","name","target","value","this","showForm","iconSortLabel","length","btnClearSearch","className","onClick","sortList","onSort","type","placeholder","onChange","React","Component","Table","deleTodo","updateTodo","e","idTodoDele","id","idTodoUpde","listTodo","listTodoElement","toLowerCase","filter","todo","nameTodo","indexOf","sort","a","b","map","index","status","colSpan","width","Form","handleSubmit","closeForm","resetForm","iscloseForm","randomId","preventDefault","dataForm","Math","floor","random","toString","substring","s4","autoComplete","onSubmit","required","FormUpdate","todoUpdate","prevProps","iscloseFormUpdate","dataFormUpdate","AppBody","getKeyWord","isUpdate","activeBtnAdd","getDataForm","getDatalocal","window","addEventListener","localStorage","setItem","JSON","stringify","param","arrayTodo","newArray","push","listItem","parse","getItem","NewListTodo","TodoUpdate","formElement","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc03414f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Control extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            keyWord : '',\r\n            isClickSort: false,\r\n            sortValue: 1,\r\n        }\r\n\r\n        this.ShowForm = this.ShowForm.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event){\r\n        var name = event.target.name\r\n        var value = event.target.value\r\n        this.setState({\r\n            [name] : value,\r\n        })\r\n    }\r\n\r\n    onSearch = () =>{\r\n        this.props.keyWord(this.state.keyWord)\r\n    }\r\n\r\n    ShowForm(){\r\n        this.props.showForm(true)\r\n    }\r\n\r\n    onClearSearch = () =>{\r\n        this.setState(state=>{\r\n            state.keyWord = ''\r\n            this.props.keyWord(this.state.keyWord)\r\n        })\r\n    }\r\n\r\n    clickBtnSort = () =>{\r\n        var isClick = this.state.isClickSort\r\n        if(isClick){\r\n            this.setState({\r\n                isClickSort: false\r\n            })\r\n        }else{\r\n            this.setState({\r\n                isClickSort: true\r\n            })\r\n        }\r\n    }\r\n\r\n    onSort(sortValue){\r\n        this.props.sortValue(sortValue)\r\n        this.setState({\r\n            sortValue: sortValue,\r\n            isClickSort: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        var {keyWord, isClickSort, sortValue} = this.state\r\n        var iconSortLabel\r\n\r\n        if(keyWord.length > 0)\r\n        {\r\n            var btnClearSearch = <i className=\"fas fa-times btn-icon-clearSearch mr-8\" onClick={this.onClearSearch}></i>\r\n        }\r\n\r\n        if(sortValue === 1){\r\n            iconSortLabel = <i className=\"fas fa-sort-alpha-down ml-12\"></i>\r\n        }else{\r\n            iconSortLabel = <i className=\"fas fa-sort-alpha-up ml-12\"></i>\r\n        }\r\n\r\n        if(isClickSort){\r\n            var sortList = <ul className=\"sort-list\">\r\n                                <li className={sortValue===1? \"sort-items A-Z active\" : \"sort-items A-Z\"} onClick={()=>this.onSort(1)}>\r\n                                    <i className=\"fas fa-sort-alpha-down sort-icon\"></i>\r\n                                </li>\r\n                                <li className={sortValue===-1? \"sort-items Z-A active\" : \"sort-items Z-A\"} onClick={()=>this.onSort(-1)}>\r\n                                    <i className=\"fas fa-sort-alpha-up sort-icon\"></i>\r\n                                </li>\r\n                            </ul>\r\n                iconSortLabel = <i className=\"fas fa-chevron-right ml-12\"></i>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <button \r\n                    className=\"btn btn-primary\" \r\n                    onClick={this.ShowForm}\r\n                > \r\n                        <i className=\"fas fa-plus mr-8\"></i>\r\n                        Thêm công việc\r\n                </button>\r\n                <div className=\"search-wrapper\">\r\n                    <div className=\"search\">\r\n                        <input  type=\"text\" \r\n                                className=\"search-input\" \r\n                                name=\"keyWord\" \r\n                                placeholder=\"Nhập từ khóa...\" \r\n                                onChange={this.handleChange}\r\n                                value={this.state.keyWord}\r\n                        />\r\n                        { btnClearSearch }\r\n                        <button className=\"btn btn-primary\" onClick={this.onSearch}> <i className=\"fas fa-search\"></i> Tìm kiếm</button>\r\n                    </div>\r\n                    <div className=\"sort\">\r\n                        <button className=\"btn btn-sort\" onClick={this.clickBtnSort}>Sắp xếp { iconSortLabel }</button>\r\n                        {sortList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Control","import React from 'react'\r\n\r\nclass Table extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.deleTodo = this.deleTodo.bind(this)\r\n        this.updateTodo = this.updateTodo.bind(this)\r\n    }\r\n\r\n    deleTodo(e){\r\n        this.props.idTodoDele(e.target.id)\r\n    }\r\n\r\n    updateTodo(e){\r\n        this.props.idTodoUpde(e.target.id)\r\n    }\r\n\r\n    render(){\r\n        var {keyWord, listTodo, sortValue} = this.props\r\n        var listTodoElement = ''\r\n\r\n        if(this.props.listTodo.length !== 0)\r\n        {\r\n            if(keyWord){\r\n                keyWord = keyWord.toLowerCase()\r\n                listTodo = listTodo.filter(todo=>{\r\n                    return todo.nameTodo.toLowerCase().indexOf(keyWord) !== -1\r\n                })\r\n            }\r\n\r\n            listTodo.sort((a,b)=>{\r\n                if(a.nameTodo > b.nameTodo) return sortValue\r\n                if(a.nameTodo < b.nameTodo) return -sortValue\r\n                else return 0\r\n            })\r\n\r\n            listTodoElement = listTodo.map((todo,index) =>{\r\n                return <tr key={todo.id}>\r\n                            <td >{index+1}</td>\r\n                            <td >{todo.nameTodo}</td>\r\n                            <td > {todo.status ? <span className=\"status-active\">kích hoạt</span> : <span className=\"status-hidden\">Ẩn</span>}</td>\r\n                            <td className=\"table-action\">\r\n                                <button className=\"btn btn-primary\" id={todo.id} onClick={this.updateTodo}>Sửa</button>\r\n                                <button className=\"btn btn-danger ml-12\" id={todo.id} onClick={this.deleTodo}>Xóa</button>\r\n                            </td>\r\n                        </tr>\r\n            })\r\n        }else{\r\n            listTodoElement = <tr >\r\n                                <td colSpan={4}>Chưa có công việc !!!</td>\r\n                            </tr>\r\n            }\r\n        return (\r\n            <div className=\"container \">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th width=\"50px\">Stt</th>\r\n                            <th >Tên</th>\r\n                            <th width=\"130px\">Trạng thái</th>\r\n                            <th width=\"200px\" className=\"table-action\">Hành động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { listTodoElement }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table","import React from 'react'\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            nameTodo: '',\r\n            status: true,\r\n            id: '',\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.closeForm = this.closeForm.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    } \r\n\r\n    closeForm(){\r\n        this.props.iscloseForm(false)\r\n    }\r\n\r\n    resetForm(){\r\n        this.setState({\r\n            nameTodo: '',\r\n            status: true,\r\n            id: '',\r\n        })\r\n    }\r\n\r\n    handleChange(e){\r\n        var name = e.target.name\r\n        var value = e.target.value\r\n        if(value === 'true') {\r\n            value = true\r\n        }\r\n        if(value === 'false') {\r\n            value = false\r\n        }\r\n        this.setState({\r\n            [name] : value,\r\n            id: this.randomId()\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        this.props.dataForm(this.state)\r\n        this.resetForm()\r\n    }\r\n\r\n\r\n    // tao id ran dom\r\n    s4(){\r\n        return Math.floor((1+ Math.random()) * 0x10000).toString(16).substring(1)\r\n    }\r\n    randomId(){\r\n        return this.s4() +'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container section-left\">\r\n                <div className=\"container-form\">\r\n                    <div className=\"form-header\">\r\n                        <p className=\"form-title\"> Thêm công việc </p>\r\n                        <i className=\"fas fa-times btn-icon-close\" onClick={this.closeForm}></i>\r\n                    </div>\r\n                    <form className=\"form\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-items\">\r\n                            <p className=\"form-items-label\">Tên: </p>\r\n                            <div className=\"form-input-container\">\r\n                                <input\r\n                                    type=\"text\" \r\n                                    className=\"form-items-input\" \r\n                                    name=\"nameTodo\" \r\n                                    placeholder=\"thêm tên công việc ...\" \r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.nameTodo}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-items\">\r\n                            <p className=\"form-items-label\">Trạng thái: </p>\r\n                                <select \r\n                                    name=\"status\"\r\n                                    className=\"form-items-input-select\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.status}\r\n                                >\r\n                                    <option value={true}>Kích hoạt</option>\r\n                                    <option value={false}>Ẩn</option>\r\n                                </select>\r\n                        </div>\r\n                        <div className=\"form-items \">\r\n                            <button \r\n                                type=\"submit\" \r\n                                className=\"btn btn-save\" \r\n                            >\r\n                                Lưu lại\r\n                            </button>\r\n                            <button \r\n                                type=\"reset\" \r\n                                className=\"btn btn-danger ml-12\" \r\n                                onClick={this.resetForm}\r\n                            >Xóa</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nclass FormUpdate extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n        nameTodo: '',\r\n        status: true,\r\n        id: '',\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.closeForm = this.closeForm.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            nameTodo: this.props.todoUpdate.nameTodo,\r\n            status: this.props.todoUpdate.status,\r\n            id: this.props.todoUpdate.id,\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props !== prevProps)\r\n        {\r\n            this.setState({\r\n                nameTodo: this.props.todoUpdate.nameTodo,\r\n                status: this.props.todoUpdate.status,\r\n                id: this.props.todoUpdate.id,\r\n            })\r\n        }\r\n    }\r\n\r\n    closeForm(){\r\n        this.props.iscloseFormUpdate(false)\r\n    }\r\n\r\n    resetForm(){\r\n        this.setState({\r\n        nameTodo: '',\r\n        status: true,\r\n        })\r\n    }\r\n\r\n    handleChange(e){\r\n        var name = e.target.name\r\n        var value = e.target.value\r\n        if(value === 'true') {\r\n            value = true\r\n        }\r\n        if(value === 'false') {\r\n            value = false\r\n        }\r\n        this.setState({\r\n            [name] : value,\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault()\r\n        this.props.dataFormUpdate(this.state)\r\n        this.resetForm()\r\n    }\r\n\r\n    render(){\r\n    return(\r\n        <div className=\"container section-left\">\r\n            <div className='container-form'>\r\n                <div className=\"form-header form-update\">\r\n                    <p className=\"form-title\"> Cập nhật lại công việc </p>\r\n                    <i className=\"fas fa-times btn-icon-close\" onClick={this.closeForm}></i>\r\n                </div>\r\n                <form className=\"form\" autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-items\">\r\n                        <p className=\"form-items-label\">Tên: </p>\r\n                        <div className=\"form-input-container\">\r\n                            <input type=\"text\" \r\n                                className=\"form-items-input\" \r\n                                name=\"nameTodo\" placeholder=\"thêm tên công việc ...\"\r\n                                onChange={this.handleChange} \r\n                                value={this.state.nameTodo} \r\n                                required\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-items\">\r\n                        <p className=\"form-items-label\">Trạng thái: </p>\r\n                        <select name=\"status\" className=\"form-items-input-select\" onChange={this.handleChange}\r\n                            value={this.state.status}>\r\n                            <option value={true}>Kích hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-items \">\r\n                        <button type=\"submit\" className=\"btn btn-update\">\r\n                            Lưu lại\r\n                        </button>\r\n                        <button type=\"reset\" className=\"btn btn-danger ml-12\" onClick={this.resetForm}>Xóa</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default FormUpdate","import React from \"react\";\r\nimport \"./BodyApp.css\";\r\nimport Control from \"./Control\";\r\nimport Table from \"./Table\";\r\nimport Form from \"./form\";\r\nimport FormUpdate from \"./formUpdate\";\r\n\r\nclass AppBody extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showForm: false,\r\n            isUpdate: false,\r\n            listTodo: [],\r\n            todoUpdate: {},\r\n            keyWord: '',\r\n            sortValue: 1,\r\n        }\r\n        this.activeBtnAdd = this.activeBtnAdd.bind(this)\r\n        this.closeForm = this.closeForm.bind(this)\r\n        this.getDataForm = this.getDataForm.bind(this)\r\n        this.getDatalocal = this.getDatalocal.bind(this)\r\n        this.deleTodo = this.deleTodo.bind(this)\r\n        this.updateTodo = this.updateTodo.bind(this) \r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('load', this.getDatalocal())\r\n    }\r\n    \r\n    componentDidUpdate(){\r\n        localStorage.setItem('ListTodo', JSON.stringify(this.state.listTodo))\r\n    }\r\n\r\n    activeBtnAdd(param){\r\n        this.setState({\r\n            showForm: param,\r\n            isUpdate: false,\r\n        })\r\n    }\r\n\r\n    closeForm(){\r\n        this.setState({\r\n            showForm: false,\r\n            isUpdate: false,\r\n        })\r\n    }\r\n\r\n    getDataForm(param){\r\n        var arrayTodo = this.state.listTodo\r\n        \r\n        if(this.state.isUpdate){\r\n            var newArray = arrayTodo.filter(todo=>todo.id !== param.id)\r\n            \r\n            newArray.push(param)\r\n            this.setState({\r\n                listTodo: newArray,\r\n                isUpdate: false,\r\n            })\r\n        }else{\r\n            arrayTodo.push(param)\r\n            this.setState({\r\n                listTodo: arrayTodo\r\n            })\r\n        }\r\n    }\r\n\r\n    getDatalocal() {\r\n        var listItem = JSON.parse(localStorage.getItem('ListTodo'))\r\n        \r\n        if(listItem){\r\n            this.setState({\r\n                listTodo: listItem\r\n            })\r\n        }\r\n    }\r\n\r\n    deleTodo(param){\r\n        var NewListTodo = this.state.listTodo.filter((todo=> todo.id !== param))\r\n        localStorage.setItem('ListTodo', JSON.stringify(NewListTodo))\r\n        this.setState({\r\n            listTodo: NewListTodo\r\n        })\r\n    }\r\n\r\n    updateTodo(param){\r\n        var  TodoUpdate = this.state.listTodo.filter((todo=> todo.id === param))\r\n        this.setState({\r\n            showForm: true, \r\n            isUpdate: true,\r\n            todoUpdate: TodoUpdate[0],\r\n        })\r\n    }\r\n\r\n    getKeyWord = (keyWord) =>{\r\n        this.setState({\r\n            keyWord: keyWord,\r\n        })\r\n    }\r\n\r\n    onSort = (sortValue) => {\r\n        this.setState({\r\n            sortValue: sortValue\r\n        })\r\n    }\r\n\r\n    render(){\r\n         if(this.state.showForm) {\r\n            var formElement = this.state.isUpdate ?\r\n                                <FormUpdate \r\n                                        todoUpdate={this.state.todoUpdate}\r\n                                        iscloseFormUpdate={this.closeForm}\r\n                                        dataFormUpdate={this.getDataForm}\r\n                                    />\r\n                                :\r\n                                <Form\r\n                                    iscloseForm={this.closeForm}\r\n                                    dataForm={this.getDataForm}\r\n                                />\r\n        }\r\n        return(\r\n            <div className=\"app-body\">\r\n                {formElement}\r\n                <div className=\"section-right\">\r\n                    <Control showForm={this.activeBtnAdd} \r\n                    keyWord={this.getKeyWord}\r\n                    sortValue={this.onSort}\r\n                    />\r\n                    <Table  listTodo={this.state.listTodo} \r\n                            idTodoDele={this.deleTodo} \r\n                            idTodoUpde={this.updateTodo} \r\n                            keyWord={this.state.keyWord}\r\n                            sortValue = {this.state.sortValue}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppBody","import './App.css';\nimport AppBody from './components/body-app/AppBody';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"header\">\n                <h3 className=\"App-heading\">Todo<span>APP</span></h3>\n            </header>\n            <main className=\"main\">\n                <AppBody />\n            </main>\n            <footer className=\"footer\">\n                <p className=\"text-auth\">@QuangBui</p>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}